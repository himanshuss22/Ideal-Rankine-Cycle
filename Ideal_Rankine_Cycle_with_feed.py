import pyromat as pm
import numpy as np

pm.config["unit_pressure"] = "kPa"
pm.config["def_p"] = 100

mp_water = pm.get("mp.H2O") # <-- for multi-phase water properties

p1 = 10 # <-- given
p2 = 400 # <-- given

v1 = 1/mp_water.ds(p=p1)[0]

w_pump1 = v1*(p2-p1)
h2 = h1+w_pump1
print(f"Work required by pump 1: {round(float(w_pump1),1)} kJ/kg")
Work required by pump 1: 0.4 kJ/kg

p5 = 4000 # <-- given
T5 = 400+273.15 # K <-- given
h5 = mp_water.h(p=p5, T=T5)
s5 = mp_water.s(p=p5, T=T5)

s6 =s5
p6 = 400 # <-- given
T6, x6 = mp_water.T_s(s=s6, p=p6, quality=True)
h6 = mp_water.h(x=x6, p=p6)

print(f"Quality of bled steam: {round(float(x6),4)}")
Quality of bled steam: 0.9757

p3 = 400 # <-- given
h3 = mp_water.hs(p=p3)[0]

y = (h2-h3)/(h2-h6)
print(f"y = {round(float(y),4)}")
y = 0.1654

p7 = p1
s7 = s5
T7, x7 = mp_water.T_s(s=s7, p=p7, quality=True)
h7 = mp_water.h(x=x7, p=p7)
w_t = h5 - y*h6 - (1-y)*h7
print(f"Work generated by turbine: {round(float(w_t),1)} kJ/kg")
Work generated by turbine: 980.4 kJ/kg

p4 = 4000 # <-- given
v3 = 1/mp_water.ds(p=p3)[0]
w_pump2 = v3*(p4-p3)
print(f"Work required by pump 2: {round(float(w_pump2),1)} kJ/kg")
Work required by pump 2: 3.9 kJ/kg

h4 = h3 + w_pump2
q_H = h5-h4
print(f"Heat input by boiler: {round(float(q_H),1)} kJ/kg")
Heat input by boiler: 2605.9 kJ/kg

eta_th = (w_t - w_pump1*(1-y) - w_pump2)/q_H*100
print(f"Thermal efficiency is: {round(float(eta_th),2)}%")
Thermal efficiency is: 37.46%
